12. Integer to Roman
Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.

Symbol       Value
I             1
V             5
X             10
L             50
C             100
D             500
M             1000
For example, 2 is written as II in Roman numeral, just two one's added together. 12 is written as XII, which is simply X + II. 
The number 27 is written as XXVII, which is XX + V + II.

Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, 
the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, 
which is written as IX. There are six instances where subtraction is used:

I can be placed before V (5) and X (10) to make 4 and 9. 
X can be placed before L (50) and C (100) to make 40 and 90. 
C can be placed before D (500) and M (1000) to make 400 and 900.
Given an integer, convert it to a roman numeral.

Example 1:

Input: num = 3
Output: "III"
Example 2:

Input: num = 4
Output: "IV"
Example 3:

Input: num = 9
Output: "IX"
Example 4:

Input: num = 58
Output: "LVIII"
Explanation: L = 50, V = 5, III = 3.

 题目 :
给出数字，输出相应的罗马数字

思路：
1.先建两个dictionary， 然后一一对应
2.1999 -> 1000  :    先用1999  = M + 999    或者 1999 = 1000 + 999
    999 ->  900：      用999= CM + 99
		99 -> 90：       99 =  XC +9
		9 -> 9：       9=  IX
		
		1999  ->   M CM XC IX

class Solution:
    def intToRoman(self, num: int) -> str:
        values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]
        numerals = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV','I']
        以上是建立两个互相对应的数字跟字母
       
			 res = ''     设置输出答案为空
        for i in range(0, len(values)):  遍历数字集
            while num >= values[i]:   如果给出的数字> 罗马数字集里面的数字
                num -= values[i]  例如1999 -> 999  = 1999 - 1000
                res += numerals[i]     在相应的字母集里找到字母，收集起来
        return res   返回最终收集的答案
