283. Move Zeroes
Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

 

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]

题目:
把0移到最后面

思路：
1.可以用two pointer：
   一个是快指针排在前面，找非0
	 一个是慢指针在后面，可以跟快指针找到非0时互换
2. 设置 慢的指针=0，

class Solution:
    def moveZeroes(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        slow = 0         设置慢的指针=0
        for fast in range(len(nums)):     快的指针所有的数字
            if nums[fast] !=0:     找到不是0的数
                nums[slow] = nums[fast]     跟慢的指针互换
                slow += 1      慢的指针往后移一位，因为之前的数已经互换了
        for i in range(slow, len(nums)):    快的指针遍历完后，剩下的慢的指针
            nums[i]= 0    遍历慢的指针到最后的数，将其变成0


