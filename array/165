165. Compare Version Numbers
Given two version numbers, version1 and version2, compare them.

Version numbers consist of one or more revisions joined by a dot '.'. 
Each revision consists of digits and may contain leading zeros. Every revision contains at least one character. 
Revisions are 0-indexed from left to right, with the leftmost revision being revision 0, 
the next revision being revision 1, and so on. For example 2.5.33 and 0.1 are valid version numbers.

To compare version numbers, compare their revisions in left-to-right order. 
Revisions are compared using their integer value ignoring any leading zeros. 
This means that revisions 1 and 001 are considered equal. If a version number does not specify a revision at an index, 
then treat the revision as 0. For example, version 1.0 is less than version 1.1 because their revision 0s are the same, 
but their revision 1s are 0 and 1 respectively, and 0 < 1.

Return the following:

If version1 < version2, return -1.
If version1 > version2, return 1.
Otherwise, return 0.
 

Example 1:

Input: version1 = "1.01", version2 = "1.001"
Output: 0
Explanation: Ignoring leading zeroes, both "01" and "001" represent the same integer "1".
Example 2:

Input: version1 = "1.0", version2 = "1.0.0"
Output: 0
Explanation: version1 does not specify revision 2, which means it is treated as "0".
Example 3:

Input: version1 = "0.1", version2 = "1.1"
Output: -1
Explanation: version1's revision 0 is "0", while version2's revision 0 is "1". 0 < 1, so version1 < version2.
Example 4:

Input: version1 = "1.0.1", version2 = "1"
Output: 1
Example 5:

Input: version1 = "7.5.2.4", version2 = "7.5.3"
Output: -1
 
 
 
 

题目:
找出哪个版本是最新的，数字越大的越新


思路：
1.把字符串按照点拆了，
2.然后数字一个一个比较

class Solution:
    def compareVersion(self, version1: str, version2: str) -> int:
        version1 = version1.split('.')    把版本1 按点“ . ” 拆了，拆成数字
        version2 = version2.split('.')    把版本2 按点“ . ” 拆了，拆成数字
        
        n = max(len(version1), len(version2))  找出最长的数字来遍历对比
        i = 0  从0，也就是第一个位置开始遍历
        
        for i in range(n):  遍历最长的数字
            v1 = int(version1[i]) if i < len(version1) else None 
						将其变成数字int， 在它的长度范围内遍历
            
						v2 = int(version2[i]) if i < len(version2) else None
						同上
            if not v2 and v1:    如果数字2 后面没有数字了，但是数字1 有
                return 1   
            elif not v1 and v2:   如果数字1 后面没有数字了，但是数字2 有
                return -1
            elif v1 and v2: 如果两者后面数字长度都一样长
                if v1 > v2:   对比大小
                    return 1
                elif v1 < v2:
                    return -1
        return 0  这个情况是两者相等
