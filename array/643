643. Maximum Average Subarray I
Given an array consisting of n integers, find the contiguous subarray of given length k that has the maximum average value. And you need to output the maximum average value.

Example 1:

Input: [1,12,-5,-6,50,3], k = 4
Output: 12.75
Explanation: Maximum average is (12-5-6+50)/4 = 51/4 = 12.75
 

Note:

1 <= k <= n <= 30,000.
Elements of the given array will be in the range [-10,000, 10,000].


题目:
找出相连的k个数的最大平均数

思路：
可以看看官方图解
每k个数，一个个往后移，每往后移一位，向前减去一位

class Solution:
    def findMaxAverage(self, nums: List[int], k: int) -> float:
        maxTotal = total = sum(nums[:k])   先定义暂时的最大k个数的和
        n = len(nums)    定义总长度
        
        for i in range(k, n):  遍历，从第k个数起，因为前面k个数已经相加，到最后n
            total = total - nums[i-k] + nums[i]   
						每往后移1位，整数之和- 前面一位的数 +后面一位的数字
            maxTotal = max(maxTotal, total)   找出最大的和
            
        return maxTotal/k   输出最大的和，并且将它除以k 得平均数
