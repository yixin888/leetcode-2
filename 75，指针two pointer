75. Sort Colors
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]
Example 3:

Input: nums = [0]
Output: [0]
Example 4:

Input: nums = [1]
Output: [1]

题目:
1.排序，从小到大升序，同款颜色排在一起
2.注意：这里标明不能用python 原来配置好的sorted function
3.不能用多余的space空间存储

思路：
1.三个数，两个指针，
2.two pointer方式，但这里用3个pointer最前面 和最后面
    p 指针找0，一般不动，只有找到0 后再往后移一位
		k 指针找2，一般不动，只有找到2后再往前移一位
		q 指针一个个遍历过去
3.不能一个个排着比，只能最前和最后，因为要是同时存在多个数比较麻烦

class Solution:
    def sortColors(self, nums: List[int]) -> None:
        p, q = 0,0      两个指针位置从0开始，其中一个找0，一个找2
        k = len(nums) - 1   第三个指针，只在最后的位置
        
        while q<= k:          左边遍历的的q指针不要超过右边k的指针
            if p < q and nums[q] == 0:    第一个指针q 为0 的时候，和p代表最前面的位置
                nums[p], nums[q] = nums[q], nums[p]  
								              指针p 和q互换，因为q=0，把0放前面
                p += 1           指针p     一般不动，只有找到0 后再往后移一位
            elif nums[q] == 2:    如果遍历的指针q 找到2
                nums[q], nums[k] = nums[k], nums[q]  互换，把它放最后面
                k -= 1     一般不动，只有找到2后再往前移一位
            else:
                q += 1    剩下遇见1了，因为0和2 都被上面指针找了，
								                 遍历的指针一个个往后遍历
																 
																 
						    最后不要return 任何东西，因为已经排好序的
								
