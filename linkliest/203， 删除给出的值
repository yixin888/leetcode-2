203. Remove Linked List Elements
Given the head of a linked list and an integer val, 
remove all the nodes of the linked list that has Node.val == val, and return the new head.

 

Example 1:


Input: head = [1,2,6,3,4,5,6], val = 6
Output: [1,2,3,4,5]
Example 2:

Input: head = [], val = 1
Output: []
Example 3:

Input: head = [7,7,7,7], val = 7
Output: []

题目:
删除给出的val数字

思路：
用递归方法：
1.3个指针
2.dummy 指针来记录，在linklist前面，为空的
3.cur 指针指向head
4.cur.next 指向head.next

class Solution:
    def removeElements(self, head: ListNode, val: int) -> ListNode:
        dummy = ListNode()     创建一个空的指针dummy，用来记录
        dummy.next = head        空的指针下一个就是head
        cur = dummy      把指针dummy 给cur指针
        
        while cur and cur.next:      当有node的时候，或者是head的时候
            if cur.next.val == val:       如果它的值= 给出的数字
                cur.next = cur.next.next     跳过它，指向下一个，即删除
            else:     不然，不相等的话
                cur = cur.next     指向下一个
                
        return dummy.next    从头返回
