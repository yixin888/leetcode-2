237. Delete Node in a Linked List
Write a function to delete a node in a singly-linked list. You will not be given access to the head of the list,
instead you will be given access to the node to be deleted directly.

It is guaranteed that the node to be deleted is not a tail node in the list.

 

Example 1:


Input: head = [4,5,1,9], node = 5
Output: [4,1,9]
Explanation: You are given the second node with value 5, the linked list should become 4 -> 1 -> 9 after calling your function.
Example 2:


Input: head = [4,5,1,9], node = 1
Output: [4,5,9]
Explanation: You are given the third node with value 1, the linked list should become 4 -> 5 -> 9 after calling your function.
Example 3:

Input: head = [1,2,3,4], node = 3
Output: [1,2,4]
Example 4:

Input: head = [0,1], node = 0
Output: [1]
Example 5:

Input: head = [-3,5,-99], node = -3
Output: [5,-99]


题目:
去除一个linklist 的node
但它不告诉你这个node前后是什么

思路：
1.一般删除掉一个node，都会给出它的前后node
     node -> node.next.next
2.这是个脑筋急转弯的题目，一般很少考
3.可以把第一个node安排成删除的那个node，然后不读它，直接跳到下一个


 if node and node.next:
            node.val = node.next.val    
						把第一个node安排成删除的那个node，然后不读它，直接跳到下一个
            node.next = node.next.next   下一个node = 下下一个node
